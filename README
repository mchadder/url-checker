# url-checker

This is a bash script which takes as input a file which contains a
curl response format, an expected response pattern, a URL pattern and an optional 
custom curl config file.

Bash brace expansion is supported (although not specifically enabled by the 
shell script). This script will rely on the relevant SHELLOPTS (or similar) 
being set to enable this functionality.

See the example urls.txt file for more documentation about the format and
available options. 

Comments are allowed by using the normal convention of prepending the 
line with a #.

Then, the script will run a curl command for each URL (after brace expansion) 
of the following form:

$ curl -sL -w "%{http_code}" URL -o /dev/null` 
or
$ curl -sL -K CONFIGFILE -w "%{http_code}" URL -o /dev/null`

This will then output the HTTP response code. If this matches the expected 
response code from the URLs file, then that is classed as a PASS, 
if not then it is considered a FAIL.

The following is example output using the example urls.txt file.

 $ ./url-checker.sh urls.txt N Y
 FAIL! RECEIVED 000 BUT EXPECTED 404        : http://localhost:8000/1
 FAIL! RECEIVED 000 BUT EXPECTED 404        : http://localhost:8000/2
 FAIL! RECEIVED 000 BUT EXPECTED 404        : http://localhost:8000/3
 FAIL! RECEIVED 000 BUT EXPECTED 404        : http://localhost:8000/4
 FAIL! RECEIVED 000 BUT EXPECTED 404        : http://localhost:8000/5
 FAIL! RECEIVED 000 BUT EXPECTED 404        : http://localhost:8000/6

The primary use case for this is to allow a basic level of unit test of a web 
application.